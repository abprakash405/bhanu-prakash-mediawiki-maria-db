---
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  EKSIAMRoleName:
    Type: String
    Description: The name of the IAM role for the EKS service to assume.
    Default: myiamroleforecreks
  EKSClusterName:
    Type: String
    Description: The desired name of your AWS EKS Cluster.
    Default: myeksclusterk
  VpcId:
    Type: String
    Default: vpc-0f767d0c5f4bd9a3b
    Description: VPCID
  PublicSubnet01:
    Type: String
    Default: subnet-064b5a8111c4eb138
    Description: public subnet1
  PublicSubnet02:
    Type: String
    Default: subnet-091ca81b503cf66dc
    Description: public subnet2
  PrivateSubnet01:
    Type: String
    Default: subnet-098d5f40e5d86ff3c
    Description: private subnet1
  PrivateSubnet02:
    Type: String
    Default: subnet-01db466671fdf6c80
    Description: private subnet2

Resources:
  EKSIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      RoleName: !Ref EKSIAMRoleName
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy

  ControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: security group
      VpcId: !Ref VpcId

  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Ref EKSClusterName
      RoleArn:
        "Fn::GetAtt": ["EKSIAMRole", "Arn"]
      ResourcesVpcConfig:
        SecurityGroupIds:
        - !Ref ControlPlaneSecurityGroup
        SubnetIds:
        - !Ref PublicSubnet01
        - !Ref PublicSubnet02
        - !Ref PrivateSubnet01
        - !Ref PrivateSubnet02
  MediawikiRepository: 
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: "bhanu-mediawiki-repo"
      ImageScanningConfiguration: 
        ScanOnPush: true
  DBRepository: 
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: "bhanu-mariadb-repo"
      ImageScanningConfiguration: 
        ScanOnPush: true
  EKSNodegroup:
    Type: 'AWS::EKS::Nodegroup'
    Properties:
      ClusterName: !Ref EKSClusterName
      NodeRole:
        "Fn::GetAtt": ["EKSIAMRole", "Arn"]
      ScalingConfig:
        MinSize: 2
        DesiredSize: 2
        MaxSize: 2
      Labels:
        Key1: maria-mediawiki
        Key2: maria-mediawiki
      Subnets:
        - subnet-064b5a8111c4eb138
        - subnet-01db466671fdf6c80
Outputs:    
  Arn:
    Value: !GetAtt MediawikiRepository.Arn
  Arn:
    Value: !GetAtt DBRepository.Arn
